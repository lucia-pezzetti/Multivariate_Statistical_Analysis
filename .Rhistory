library(corrplot)
library(MVN)
library(sp)
library(gridExtra)
library(reshape2)
library(ggrepel)
library(goft)
library(matrixcalc)
library(caret)
library(nnet)
library(klaR)
library(randomForest)
psych<-read.table("data/psych.txt",header=T)
#dim(psych)
head(psych)
with(psych,table(group))
var <- colnames(psych[,4:27])
meaning <- c("visual perception", "cubes", "paper form board", "flags", "general information", "paragraph comprehension", "sentence completion", "word classification", "word meaning", "addition", "code", "counting dots", "straight-curved capitals", "word recognition", "number recognition", "figure recognition", "object-number", "number-figure", "figure-word", "deduction", "numerical puzzles", "problem reasoning", "series completion", "arithmetic problems")
var.meaning <- as.data.frame(t(rbind(var, meaning)))
Grant_White <- psych %>% dplyr::filter(group == "GRANT") %>%
dplyr::select(-c(Case, Sex, Age, group))
R <- cor(Grant_White)
#testRes = cor.mtest(Grant_White, conf.level = 0.95)
corrplot(R, method = 'color', type = 'lower', insig='blank',
addCoef.col ='black', number.cex = 0.8, diag=FALSE, col = COL2('RdBu', n = 200))
Grant_White <- scale(Grant_White)
n <- nrow(Grant_White)
p <- ncol(Grant_White)
R <- cor(Grant_White)
x.bar <- colMeans(Grant_White)
S <- cov(Grant_White)
d = mahalanobis(Grant_White, center = x.bar, cov = S);
ggplot(as.data.frame(d), aes(x = qchisq(ppoints(d), df = p), y = sort(d))) +
geom_point() + geom_abline(intercept = 0, slope = 1, col = "red", lwd = 1) +
expand_limits(x = c(9.0, 60.0), y = c(9.0, 60.0)) +
ggtitle("Chi-squared QQ-plot of squared generalized distances\n Grant-White school") +
theme(plot.title = element_text(hjust = 0.5))
a <- (n-0.5)/n
x = 1:length(d)
outliers <- which(d > qchisq(a, df = p))
labels <- rep("", n)
labels[outliers] <- as.character(psych$Case[nrow(psych[psych$group == "PASTEUR",]) + outliers])
colors <- rep("black", n)
colors[outliers] <- "red"
ggplot(as.data.frame(d), aes(x = x, y = d, label = labels)) +
geom_point(pch = 16, col = colors) +
geom_text(hjust = 0.2, nudge_x = -0.05, nudge_y = 2.0, size = 4) +
geom_hline(yintercept = qchisq(a, df = p), col = "red", lty = 2) +
ggtitle("Multivariate outliers") +
ylab("squared Mahalonobis distances") +
xlab("indexes") +
theme(plot.title = element_text(hjust = 0.5))
without_outliers <- Grant_White[-c(12,24),]
x.bar <- colMeans(without_outliers)
S <- cov(without_outliers)
d = mahalanobis(without_outliers, center = x.bar, cov = S);
ggplot(as.data.frame(d), aes(x = qchisq(ppoints(d), df = p), y = sort(d))) +
geom_point() + geom_abline(intercept = 0, slope = 1, col = "red", lwd = 1) +
expand_limits(x = c(9.0, 60.0), y = c(9.0, 60.0)) +
ggtitle("Chi-squared QQ-plot of squared generalized distances\n without outliers") +
theme(plot.title = element_text(hjust = 0.5))
#mvShapiro.Test(as.matrix(scale(Grant_White)))
multnorm_hz <- mvn(Grant_White, scale = T)
multnorm_hz$multivariateNormality
multnorm_mardia <- mvn(Grant_White, mvnTest = "mardia", scale = T)
multnorm_mardia$multivariateNormality
multnorm_hz <- mvn(without_outliers, scale = T)
multnorm_hz$multivariateNormality
multnorm_mardia <- mvn(without_outliers, mvnTest = "mardia", scale = T)
multnorm_mardia$multivariateNormality
m = c(5,6)
psych.5fa.ml <- factanal(x=Grant_White, factors = m[1], rotation = "none")
psych.6fa.ml <- factanal(x=Grant_White, factors = m[2], rotation = "none")
L.5.ml <- psych.5fa.ml$loadings; L.5.ml
L.6.ml <- psych.6fa.ml$loadings; L.6.ml
L5 <- psych.5fa.ml$loadings
L6 <- psych.6fa.ml$loadings
sL5 <- colSums(L5^2)
sL6 <- colSums(L6^2)
rbind(`Proportion Var` = round(sL5/p, 3L))
rbind(`Proportion Var` = round(sL6/p, 3L))
rbind(`Cumulative Var` = cumsum(round(sL5/p, 3L)))
rbind(`Cumulative Var` = cumsum(round(sL6/p, 3L)))
uniq <- cbind(psych.5fa.ml$uniquenesses, psych.6fa.ml$uniquenesses)
uniq <- as.data.frame(round(uniq, 3))
colnames(uniq) <- c("uniquenesses_nfactors_5", "uniquenesses_nfactors_6")
uniq
uniq %>% dplyr::filter(pmin(uniquenesses_nfactors_5, uniquenesses_nfactors_6) > 0.4)
uniq %>% dplyr::filter(abs(uniquenesses_nfactors_5 - uniquenesses_nfactors_6) > 0.1) %>% dplyr::arrange(desc(uniquenesses_nfactors_5 - uniquenesses_nfactors_6))
Psi.5.ml <- diag(psych.5fa.ml$uniquenesses, p)
Psi.6.ml <- diag(psych.6fa.ml$uniquenesses, p)
Residual.5.ml <- R - (L.5.ml%*%t(L.5.ml) + Psi.5.ml)
Residual.6.ml <- R - (L.6.ml%*%t(L.6.ml) + Psi.6.ml)
Frob.res <- cbind(sum(Residual.5.ml^2), sum(Residual.6.ml^2))
row.names(Frob.res) <- "Frobenius norm of the residual matrix: "
colnames(Frob.res) <- c("nFactors_5", "nFactors_6")
as.data.frame(round(Frob.res, 3))
psych.5fa.ml <- factanal(x=Grant_White, factors = m[1], rotation = "varimax")
psych.5fa.ml$loadings
maximum <- apply(psych.5fa.ml$loadings, 1, max)
pos.max <- as.data.frame(which(psych.5fa.ml$loadings == maximum, arr.ind = T))
pos.max <- pos.max %>% dplyr::mutate(load.max = round(psych.5fa.ml$loadings[as.matrix(pos.max)], 3))
group1 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 1))
group2 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 2))
group3 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 3))
group4 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 4))
group5 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 5))
group1 <- var.meaning %>% dplyr::filter(var %in% group1) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 1)$load.max)
group1
group2 <- var.meaning %>% dplyr::filter(var %in% group2) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 2)$load.max)
group2
restricted2 <- group2 %>% dplyr::filter(load.max > 0.5)
restricted2
group3 <- var.meaning %>% dplyr::filter(var %in% group3) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 3)$load.max)
group3
restricted3 <- group3 %>% dplyr::filter(load.max > 0.49)
restricted3
group4 <- var.meaning %>% dplyr::filter(var %in% group4) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 4)$load.max)
group4
restricted4 <- group4 %>% dplyr::filter(load.max > 0.5)
restricted4
var.meaning %>% dplyr::filter(var %in% group5) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 5)$load.max)
doubt.var <- rbind(group2 %>% dplyr::filter(load.max < 0.5), group3 %>% dplyr::filter(load.max < 0.5), group4 %>% dplyr::filter(load.max < 0.5))
doubt.var <- round(psych.5fa.ml$loadings[which(var.meaning$var%in%doubt.var$var),],3)
doubt.var <- cbind(doubt.var, dplyr::filter(var.meaning, var %in% row.names(doubt.var)))
doubt.var <- dplyr::select(doubt.var, -var)
doubt.var
psych.5fa.ml <- factanal(x=Grant_White, factors = m[1], rotation = "varimax",
scores = "regression")
scores_GrWh <- psych.5fa.ml$scores
ggplot(as.data.frame(scores_GrWh), aes(x = Factor1, y = Factor2)) +
geom_point() +
ggtitle("Scatter-plot of the first two factor scores\n for the Grant-White students") +
theme(plot.title = element_text(hjust = 0.5, size = 10))
data.frame("correlation" = cor(scores_GrWh[,1], scores_GrWh[,2]))
means.hat <- colMeans(scores_GrWh[,c(1,2)])
means.hat <- data.frame("x_bar" = means.hat[1], "y_bar" = means.hat[2])
means.hat
a_GW <- (n-0.5)/n
label_GW = rep("", n)
pl <- ggplot(as.data.frame(scores_GrWh), aes(x = Factor1, y = Factor2)) +
geom_point() + stat_ellipse(level = a_GW, type = "norm")
# before plotting we determine the potential bivariate outliers.
# Extract components
build <- ggplot_build(pl)$data
points <- build[[1]]
ell <- build[[2]]
# Find which points are inside the ellipse, and add this to the data
dat <- data.frame(
points[1:2],
in.ell = as.logical(point.in.polygon(points$x, points$y, ell$x, ell$y))
)
label_GW[!dat$in.ell] = as.character(psych$Case[nrow(psych[psych$group == "PASTEUR",]) + which(!dat$in.ell)])
pl_sc_GW <- ggplot(dat, aes(x = x, y = y)) + geom_point(aes(col = in.ell), show.legend = F) + geom_text(mapping = aes(label = label_GW),
hjust = 1.0, nudge_y = -0.15, nudge_x = 0.05, size = 5, parse = T) +
stat_ellipse(level = 0.95, color = "royalblue2", linetype = 2) +
stat_ellipse(level = a_GW, color = "darkorange") +
scale_color_manual(values = c("red", "black")) +
geom_text(mapping = aes(x = 0.25, y = 2.7, label = "level = (n-0.5)/n = 0.9965"),
colour = "darkorange") +
geom_text(mapping = aes(x = 0.25, y = 2, label = "level = 0.95"),
colour = "royalblue2") +
geom_point(mapping = aes(x=means.hat$x_bar, y=means.hat$y_bar),
color = "darkorchid3", size = 3) +
geom_text(mapping = aes(x = means.hat$x_bar, y = means.hat$y_bar,
label = "(x_bar, y_bar)"), nudge_x = 0.3,
nudge_y = -0.1, colour = "darkorchid3") +
xlab("Factor 1") + ylab("Factor 2") +
ggtitle("Scatter-plot of the first two factor scores\n for the Grant-White students") +
theme(plot.title = element_text(hjust = 0.5, size = 20)) +
xlim(-3.3, 3.3) + ylim(-3.3, 3.3)
pl_sc_GW
a_GW <- (n-0.5)/n
label_GW = rep("", n)
pl <- ggplot(as.data.frame(scores_GrWh), aes(x = Factor1, y = Factor2)) +
geom_point() + stat_ellipse(level = a_GW, type = "norm")
# before plotting we determine the potential bivariate outliers.
# Extract components
build <- ggplot_build(pl)$data
points <- build[[1]]
ell <- build[[2]]
# Find which points are inside the ellipse, and add this to the data
dat <- data.frame(
points[1:2],
in.ell = as.logical(point.in.polygon(points$x, points$y, ell$x, ell$y))
)
label_GW[!dat$in.ell] = as.character(psych$Case[nrow(psych[psych$group == "PASTEUR",]) + which(!dat$in.ell)])
pl_sc_GW <- ggplot(dat, aes(x = x, y = y)) + geom_point(aes(col = in.ell), show.legend = F) + geom_text(mapping = aes(label = label_GW),
hjust = 1.0, nudge_y = -0.15, nudge_x = 0.05, size = 5, parse = T) +
stat_ellipse(type = "norm", level = 0.95, color = "royalblue2", linetype = 2) +
stat_ellipse(type = "norm",level = a_GW, color = "darkorange") +
scale_color_manual(values = c("red", "black")) +
geom_text(mapping = aes(x = 0.25, y = 2.7, label = "level = (n-0.5)/n = 0.9965"),
colour = "darkorange") +
geom_text(mapping = aes(x = 0.25, y = 2, label = "level = 0.95"),
colour = "royalblue2") +
geom_point(mapping = aes(x=means.hat$x_bar, y=means.hat$y_bar),
color = "darkorchid3", size = 3) +
geom_text(mapping = aes(x = means.hat$x_bar, y = means.hat$y_bar,
label = "(x_bar, y_bar)"), nudge_x = 0.3,
nudge_y = -0.1, colour = "darkorchid3") +
xlab("Factor 1") + ylab("Factor 2") +
ggtitle("Scatter-plot of the first two factor scores\n for the Grant-White students") +
theme(plot.title = element_text(hjust = 0.5, size = 20)) +
xlim(-3.3, 3.3) + ylim(-3.3, 3.3)
pl_sc_GW
a_GW <- (n-0.5)/n
label_GW = rep("", n)
pl <- ggplot(as.data.frame(scores_GrWh), aes(x = Factor1, y = Factor2)) +
geom_point() + stat_ellipse(level = a_GW, type = "norm")
# before plotting we determine the potential bivariate outliers.
# Extract components
build <- ggplot_build(pl)$data
points <- build[[1]]
ell <- build[[2]]
# Find which points are inside the ellipse, and add this to the data
dat <- data.frame(
points[1:2],
in.ell = as.logical(point.in.polygon(points$x, points$y, ell$x, ell$y))
)
label_GW[!dat$in.ell] = as.character(psych$Case[nrow(psych[psych$group == "PASTEUR",]) + which(!dat$in.ell)])
pl_sc_GW <- ggplot(dat, aes(x = x, y = y)) + geom_point(aes(col = in.ell), show.legend = F) + geom_text(mapping = aes(label = label_GW),
hjust = 1.0, nudge_y = -0.15, nudge_x = 0.05, size = 5, parse = T) +
stat_ellipse(type = "norm", level = 0.95, color = "royalblue2", linetype = 2) +
stat_ellipse(type = "norm",level = a_GW, color = "darkorange") +
scale_color_manual(values = c("black")) +
geom_text(mapping = aes(x = 0.25, y = 2.7, label = "level = (n-0.5)/n = 0.9965"),
colour = "darkorange") +
geom_text(mapping = aes(x = 0.25, y = 2, label = "level = 0.95"),
colour = "royalblue2") +
geom_point(mapping = aes(x=means.hat$x_bar, y=means.hat$y_bar),
color = "darkorchid3", size = 3) +
geom_text(mapping = aes(x = means.hat$x_bar, y = means.hat$y_bar,
label = "(x_bar, y_bar)"), nudge_x = 0.3,
nudge_y = -0.1, colour = "darkorchid3") +
xlab("Factor 1") + ylab("Factor 2") +
ggtitle("Scatter-plot of the first two factor scores\n for the Grant-White students") +
theme(plot.title = element_text(hjust = 0.5, size = 20)) +
xlim(-3.3, 3.3) + ylim(-3.3, 3.3)
pl_sc_GW
rm(list=ls())
knitr::opts_chunk$set(root.dir = normalizePath("~/GitHub/PS2_Multivariate"))
# useful commands:
# include=FALSE - results and code are not displayed
# echo=FALSE - code is not displayed
# result=FALSE - code is printed but results not
# error=TRUE - to continue execution despite errors in the chunk
# warning=FALSE - to hide warnings
# eval=FALSE - code is visible in the file but is not executed
library(plyr)
library(tidyverse)
library(MASS)
library(ggplot2)
library(ellipse)
library(corrplot)
library(MVN)
library(sp)
library(gridExtra)
library(reshape2)
library(ggrepel)
library(goft)
library(matrixcalc)
library(caret)
library(nnet)
library(klaR)
library(randomForest)
psych<-read.table("data/psych.txt",header=T)
#dim(psych)
head(psych)
with(psych,table(group))
var <- colnames(psych[,4:27])
meaning <- c("visual perception", "cubes", "paper form board", "flags", "general information", "paragraph comprehension", "sentence completion", "word classification", "word meaning", "addition", "code", "counting dots", "straight-curved capitals", "word recognition", "number recognition", "figure recognition", "object-number", "number-figure", "figure-word", "deduction", "numerical puzzles", "problem reasoning", "series completion", "arithmetic problems")
var.meaning <- as.data.frame(t(rbind(var, meaning)))
Grant_White <- psych %>% dplyr::filter(group == "GRANT") %>%
dplyr::select(-c(Case, Sex, Age, group))
R <- cor(Grant_White)
#testRes = cor.mtest(Grant_White, conf.level = 0.95)
corrplot(R, method = 'color', type = 'lower', insig='blank',
addCoef.col ='black', number.cex = 0.8, diag=FALSE, col = COL2('RdBu', n = 200))
Grant_White <- scale(Grant_White)
n <- nrow(Grant_White)
p <- ncol(Grant_White)
R <- cor(Grant_White)
x.bar <- colMeans(Grant_White)
S <- cov(Grant_White)
d = mahalanobis(Grant_White, center = x.bar, cov = S);
ggplot(as.data.frame(d), aes(x = qchisq(ppoints(d), df = p), y = sort(d))) +
geom_point() + geom_abline(intercept = 0, slope = 1, col = "red", lwd = 1) +
expand_limits(x = c(9.0, 60.0), y = c(9.0, 60.0)) +
ggtitle("Chi-squared QQ-plot of squared generalized distances\n Grant-White school") +
theme(plot.title = element_text(hjust = 0.5))
a <- (n-0.5)/n
x = 1:length(d)
outliers <- which(d > qchisq(a, df = p))
labels <- rep("", n)
labels[outliers] <- as.character(psych$Case[nrow(psych[psych$group == "PASTEUR",]) + outliers])
colors <- rep("black", n)
colors[outliers] <- "red"
ggplot(as.data.frame(d), aes(x = x, y = d, label = labels)) +
geom_point(pch = 16, col = colors) +
geom_text(hjust = 0.2, nudge_x = -0.05, nudge_y = 2.0, size = 4) +
geom_hline(yintercept = qchisq(a, df = p), col = "red", lty = 2) +
ggtitle("Multivariate outliers") +
ylab("squared Mahalonobis distances") +
xlab("indexes") +
theme(plot.title = element_text(hjust = 0.5))
without_outliers <- Grant_White[-c(12,24),]
x.bar <- colMeans(without_outliers)
S <- cov(without_outliers)
d = mahalanobis(without_outliers, center = x.bar, cov = S);
ggplot(as.data.frame(d), aes(x = qchisq(ppoints(d), df = p), y = sort(d))) +
geom_point() + geom_abline(intercept = 0, slope = 1, col = "red", lwd = 1) +
expand_limits(x = c(9.0, 60.0), y = c(9.0, 60.0)) +
ggtitle("Chi-squared QQ-plot of squared generalized distances\n without outliers") +
theme(plot.title = element_text(hjust = 0.5))
#mvShapiro.Test(as.matrix(scale(Grant_White)))
multnorm_hz <- mvn(Grant_White, scale = T)
multnorm_hz$multivariateNormality
multnorm_mardia <- mvn(Grant_White, mvnTest = "mardia", scale = T)
multnorm_mardia$multivariateNormality
multnorm_hz <- mvn(without_outliers, scale = T)
multnorm_hz$multivariateNormality
multnorm_mardia <- mvn(without_outliers, mvnTest = "mardia", scale = T)
multnorm_mardia$multivariateNormality
m = c(5,6)
psych.5fa.ml <- factanal(x=Grant_White, factors = m[1], rotation = "none")
psych.6fa.ml <- factanal(x=Grant_White, factors = m[2], rotation = "none")
L.5.ml <- psych.5fa.ml$loadings; L.5.ml
L.6.ml <- psych.6fa.ml$loadings; L.6.ml
L5 <- psych.5fa.ml$loadings
L6 <- psych.6fa.ml$loadings
sL5 <- colSums(L5^2)
sL6 <- colSums(L6^2)
rbind(`Proportion Var` = round(sL5/p, 3L))
rbind(`Proportion Var` = round(sL6/p, 3L))
rbind(`Cumulative Var` = cumsum(round(sL5/p, 3L)))
rbind(`Cumulative Var` = cumsum(round(sL6/p, 3L)))
uniq <- cbind(psych.5fa.ml$uniquenesses, psych.6fa.ml$uniquenesses)
uniq <- as.data.frame(round(uniq, 3))
colnames(uniq) <- c("uniquenesses_nfactors_5", "uniquenesses_nfactors_6")
uniq
uniq %>% dplyr::filter(pmin(uniquenesses_nfactors_5, uniquenesses_nfactors_6) > 0.4)
uniq %>% dplyr::filter(abs(uniquenesses_nfactors_5 - uniquenesses_nfactors_6) > 0.1) %>% dplyr::arrange(desc(uniquenesses_nfactors_5 - uniquenesses_nfactors_6))
Psi.5.ml <- diag(psych.5fa.ml$uniquenesses, p)
Psi.6.ml <- diag(psych.6fa.ml$uniquenesses, p)
Residual.5.ml <- R - (L.5.ml%*%t(L.5.ml) + Psi.5.ml)
Residual.6.ml <- R - (L.6.ml%*%t(L.6.ml) + Psi.6.ml)
Frob.res <- cbind(sum(Residual.5.ml^2), sum(Residual.6.ml^2))
row.names(Frob.res) <- "Frobenius norm of the residual matrix: "
colnames(Frob.res) <- c("nFactors_5", "nFactors_6")
as.data.frame(round(Frob.res, 3))
psych.5fa.ml <- factanal(x=Grant_White, factors = m[1], rotation = "varimax")
psych.5fa.ml$loadings
maximum <- apply(psych.5fa.ml$loadings, 1, max)
pos.max <- as.data.frame(which(psych.5fa.ml$loadings == maximum, arr.ind = T))
pos.max <- pos.max %>% dplyr::mutate(load.max = round(psych.5fa.ml$loadings[as.matrix(pos.max)], 3))
group1 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 1))
group2 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 2))
group3 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 3))
group4 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 4))
group5 <- row.names(dplyr::filter(as.data.frame(pos.max), col == 5))
group1 <- var.meaning %>% dplyr::filter(var %in% group1) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 1)$load.max)
group1
group2 <- var.meaning %>% dplyr::filter(var %in% group2) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 2)$load.max)
group2
restricted2 <- group2 %>% dplyr::filter(load.max > 0.5)
restricted2
group3 <- var.meaning %>% dplyr::filter(var %in% group3) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 3)$load.max)
group3
restricted3 <- group3 %>% dplyr::filter(load.max > 0.49)
restricted3
group4 <- var.meaning %>% dplyr::filter(var %in% group4) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 4)$load.max)
group4
restricted4 <- group4 %>% dplyr::filter(load.max > 0.5)
restricted4
var.meaning %>% dplyr::filter(var %in% group5) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max), col == 5)$load.max)
doubt.var <- rbind(group2 %>% dplyr::filter(load.max < 0.5), group3 %>% dplyr::filter(load.max < 0.5), group4 %>% dplyr::filter(load.max < 0.5))
doubt.var <- round(psych.5fa.ml$loadings[which(var.meaning$var%in%doubt.var$var),],3)
doubt.var <- cbind(doubt.var, dplyr::filter(var.meaning, var %in% row.names(doubt.var)))
doubt.var <- dplyr::select(doubt.var, -var)
doubt.var
psych.5fa.ml <- factanal(x=Grant_White, factors = m[1], rotation = "varimax",
scores = "regression")
scores_GrWh <- psych.5fa.ml$scores
ggplot(as.data.frame(scores_GrWh), aes(x = Factor1, y = Factor2)) +
geom_point() +
ggtitle("Scatter-plot of the first two factor scores\n for the Grant-White students") +
theme(plot.title = element_text(hjust = 0.5, size = 10))
data.frame("correlation" = cor(scores_GrWh[,1], scores_GrWh[,2]))
means.hat <- colMeans(scores_GrWh[,c(1,2)])
means.hat <- data.frame("x_bar" = means.hat[1], "y_bar" = means.hat[2])
means.hat
a_GW <- (n-0.5)/n
label_GW = rep("", n)
pl <- ggplot(as.data.frame(scores_GrWh), aes(x = Factor1, y = Factor2)) +
geom_point() + stat_ellipse(level = a_GW, type = "norm")
# before plotting we determine the potential bivariate outliers.
# Extract components
build <- ggplot_build(pl)$data
points <- build[[1]]
ell <- build[[2]]
# Find which points are inside the ellipse, and add this to the data
dat <- data.frame(
points[1:2],
in.ell = as.logical(point.in.polygon(points$x, points$y, ell$x, ell$y))
)
label_GW[!dat$in.ell] = as.character(psych$Case[nrow(psych[psych$group == "PASTEUR",]) + which(!dat$in.ell)])
pl_sc_GW <- ggplot(dat, aes(x = x, y = y)) + geom_point(aes(col = in.ell), show.legend = F) + geom_text(mapping = aes(label = label_GW),
hjust = 1.0, nudge_y = -0.15, nudge_x = 0.05, size = 5, parse = T) +
stat_ellipse(type = "norm", level = 0.95, color = "royalblue2", linetype = 2) +
stat_ellipse(type = "norm",level = a_GW, color = "darkorange") +
scale_color_manual(values = c("black")) +
geom_text(mapping = aes(x = 0.25, y = 2.7, label = "level = (n-0.5)/n = 0.9965"),
colour = "darkorange") +
geom_text(mapping = aes(x = 0.25, y = 2, label = "level = 0.95"),
colour = "royalblue2") +
geom_point(mapping = aes(x=means.hat$x_bar, y=means.hat$y_bar),
color = "darkorchid3", size = 3) +
geom_text(mapping = aes(x = means.hat$x_bar, y = means.hat$y_bar,
label = "(x_bar, y_bar)"), nudge_x = 0.3,
nudge_y = -0.1, colour = "darkorchid3") +
xlab("Factor 1") + ylab("Factor 2") +
ggtitle("Scatter-plot of the first two factor scores\n for the Grant-White students") +
theme(plot.title = element_text(hjust = 0.5, size = 20)) +
xlim(-3.3, 3.3) + ylim(-3.3, 3.3)
pl_sc_GW
Pasteur <- psych %>% dplyr::filter(group == "PASTEUR") %>%
dplyr::select(-c(Case, Sex, Age, group))
n <- nrow(Pasteur)
p <- ncol(Pasteur)
R_past <- cor(Pasteur)
corrplot(R_past, method = 'color', type = 'lower', insig='blank',
addCoef.col ='black', number.cex = 0.8, diag=FALSE, col = COL2('RdBu', n = 200))
x.bar <- colMeans(Pasteur)
S <- cov(Pasteur)
d = mahalanobis(Pasteur, center = x.bar, cov = S);
ggplot(as.data.frame(d), aes(x = qchisq(ppoints(d), df = p), y = sort(d))) +
geom_point() + geom_abline(intercept = 0, slope = 1, col = "red", lwd = 1) +
expand_limits(x = c(9.0, 60.0), y = c(9.0, 60.0)) +
ggtitle("Chi-squared QQ-plot of squared generalized distancees\n Pasteur School") + theme(plot.title = element_text(hjust = 0.5))
psych.5fa.ml <- factanal(x=Pasteur, factors = m[1], rotation = "varimax")
psych.5fa.ml$loadings
maximum_past <- apply(psych.5fa.ml$loadings, 1, max)
pos.max_past <- as.data.frame(which(psych.5fa.ml$loadings == maximum_past, arr.ind = T))
pos.max_past <- pos.max_past %>% dplyr::mutate(load.max = round(psych.5fa.ml$loadings[as.matrix(pos.max_past)], 3))
group1_past <- row.names(dplyr::filter(as.data.frame(pos.max_past), col == 1))
group2_past <- row.names(dplyr::filter(as.data.frame(pos.max_past), col == 2))
group3_past <- row.names(dplyr::filter(as.data.frame(pos.max_past), col == 3))
group4_past <- row.names(dplyr::filter(as.data.frame(pos.max_past), col == 4))
group5_past <- row.names(dplyr::filter(as.data.frame(pos.max_past), col == 5))
group1_past <- var.meaning %>% dplyr::filter(var %in% group1_past) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max_past), col == 1)$load.max)
group1_past
group2_past <- var.meaning %>% dplyr::filter(var %in% group2_past) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max_past), col == 2)$load.max)
group2_past
restricted2_past <- group2_past %>% dplyr::filter(load.max > 0.5)
restricted2_past
group3_past <- var.meaning %>% dplyr::filter(var %in% group3_past) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max_past), col == 3)$load.max)
group3_past
restricted3_past <- group3_past %>% dplyr::filter(load.max > 0.5)
restricted3_past
group4_past <- var.meaning %>% dplyr::filter(var %in% group4_past) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max_past), col == 4)$load.max)
group4_past
group5_past <- var.meaning %>% dplyr::filter(var %in% group5_past) %>% dplyr::mutate(load.max = dplyr::filter(as.data.frame(pos.max_past), col == 5)$load.max)
group5_past
restricted5_past <- group5_past %>% dplyr::filter(load.max > 0.5)
restricted5_past
doubt.var_past <- rbind(group2_past %>% dplyr::filter(load.max < 0.5), group3_past %>% dplyr::filter(load.max < 0.5), group5_past %>% dplyr::filter(load.max < 0.5))
doubt.var_past <- round(psych.5fa.ml$loadings[which(var.meaning$var%in%doubt.var_past$var),],3)
doubt.var_past <- cbind(doubt.var_past, dplyr::filter(var.meaning, var %in% row.names(doubt.var_past)))
doubt.var_past <- dplyr::select(doubt.var_past, -var)
doubt.var_past
psych.5fa.ml <- factanal(x=Pasteur, factors = m[1], rotation = "varimax",
scores = "regression")
scores_Past <- psych.5fa.ml$scores
data.frame("correlation" = cor(scores_Past[,1], scores_Past[,2]))
means.hat <- colMeans(scores_Past[,c(1,2)])
means.hat <- data.frame("x_bar" = means.hat[1], "y_bar" = means.hat[2])
means.hat
a_P <- (n-0.5)/n
label_P = rep("", n)
pl <- ggplot(as.data.frame(scores_Past), aes(x = Factor1, y = Factor2)) +
geom_point() + stat_ellipse(type = "norm", level = a_P)
# before plotting we determine the potential bivariate outliers.
# Extract components
build <- ggplot_build(pl)$data
points <- build[[1]]
ell <- build[[2]]
# Find which points are inside the ellipse, and add this to the data
dat <- data.frame(
points[1:2],
in.ell = as.logical(point.in.polygon(points$x, points$y, ell$x, ell$y))
)
label_P[!dat$in.ell] = as.character(psych$Case[which(!dat$in.ell)])
pl_sc_P <- ggplot(dat, aes(x = x, y = y)) + geom_point(aes(col = in.ell), show.legend = F) + geom_text(mapping = aes(label = label_P),
nudge_y = -0.2, nudge_x = 0.0, size = 5, parse = T) +
stat_ellipse(type = "norm", level = 0.95, color = "royalblue2", linetype = 2) +
stat_ellipse(type = "norm", level = a_P, color = "darkorange") +
scale_color_manual(values = c("red", "black")) +
geom_text(mapping = aes(x = 0.25, y = 2.7, label = "level = (n-0.5)/n = 0.9965"),
colour = "darkorange") +
geom_text(mapping = aes(x = 0.25, y = 2, label = "level = 0.95"),
colour = "royalblue2") +
geom_point(mapping = aes(x=means.hat$x_bar, y=means.hat$y_bar),
color = "darkorchid3", size = 3) +
geom_text(mapping = aes(x = means.hat$x_bar, y = means.hat$y_bar,
label = "(x_bar, y_bar)"), nudge_x = 0.0,
nudge_y = -0.15, colour = "darkorchid3") +
xlab("Factor 1") + ylab("Factor 2") +
ggtitle("Scatter-plot of the first two factor scores\n for the Pasteur students") +
theme(plot.title = element_text(hjust = 0.5, size = 20)) +
xlim(-3.3, 3.3) + ylim(-3.3, 3.3)
grid.arrange(pl_sc_GW, pl_sc_P, nrow = 1)
